// Config file with specific settings for development environment
{
  // Parameters pertaining to the Catenis application
  "application": {
    "seedFilename": "seed.test2.dat",
    "cryptoNetwork": "testnet",  // Available values: 'bitcoin' (for Bitcoin's production blockchain), 'testnet' (for Bitcoin's test blockchain)
    "shutdownTimeout": 30000   // Time, in miliseconds, that the application should wait after it receives a terminate request before it actually terminates
  },
  // Parameters pertaining to the Startup module
  "startup": {
    "fixMissingAddresses": false, // Indicate if issued blockchain addresses are missing from BitcoinCore wallet they should be automaically included
    "bypassProcessing": false     // NOTE: this option is for DEBUG ONLY. Bypass all processing, so the app starts but does not do anything. This allows
                                  //  for debuging via 'meteor shell' or 'meteor mongo'
  },
  // Parameters pertaining to logging mechanism
  "logging": {
    "console": {
      "active": true,
      "logLevel": "TRACE"
    },
    "file": {
      "active": true,
      "logLevel": "DEBUG"
    },
    "email": {
      "active": false,
      "logLevel": "ACTION",
      "smtpHost": "smtp.netzero.com",
      "secureProto": "ssl", // Valid options: none, ssl or tls
      "username": "csdecastro", // To be set only if required by SMTP host
      "password": "???????", // To be set only if required by SMTP host
      "toAddresses": "claudiosdc@gmail.com", // Can be set to a comma separated list of e-mail addresses
      "fromAddress": "Catenis <csdecastro@netzero.com>"
    }
  },
  // Parameters pertaining to BitcoinFees module
  "bitcoinFees": {
    "retrieveFeesInterval": 86400000,  // Time interval, in miliseconds, for executing method to retrieve latest bitcoin fees
    "numDbRecsToMaintain": 2000,  // Number of database docs/recs used to store latest fees that should be maintained when puging the database
    "dbPurgeHours": 2,  // Hours component of time when database purge should take place
    "dbPurgeMinutes": 0,  // Minutes component of time when database purge should take place
    "dbPurgeSeconds": 0,  // Seconds component of time when database purge should take place
    "dbPurgeInterval": 86400000  // Time interval, in miliseconds, for executing process to purge database (delete oldest fees docs/recs)
  },
  // Parameters pertaining to KeyStore module
  "keyStore": {
    "obsoleteExtKeyTimeToPurge": 300, // Time, in seconds, before an obsolete HD extended key is purged from local key storage
    "purgeUnusedExtKeyInternal": 1800000  // Time interval, in miliseconds, for executing method to purge unused HD extended keys form local key storage
  },
  // Parameters pertaining to BitcoinCore module
  "bitcoinCore": {
    "serverHost": "10.8.0.1", // Bitcoin Core server host name/IP address (access via VPN)
    //"serverHost": "catenis-dev", // Bitcoin Core server host name/IP address
    "rpcConnectionTimeout": 30000,  // Timeout, in miliseconds, for RPC connection with the bitcoin server.
    "rescanTimeout": 900000 // Timeout, in miniseconds, for waiting on Bitcoin Core to finish rescanning the blockchain after importing private key
  },
  // Parameters pertaining to OmniCore module
  "omniCore": {
    "serverHost": "10.8.0.1", // Omni Core server host name/IP address (access via VPN)
    //"serverHost": "catenis-dev", // Omni Core server host name/IP address
    "mainRpcPort": 7332, // Port used to connect with Omni Core server via its RPC interface to interact with bitcoin's main blockchain
    "testnetRpcPort": 17332, // Port used to connect with Omni Core server via its RPC interface to interact with bitcoin's testnet blockchain
    "rpcConnectionTimeout": 30000,  // Timeout, in miliseconds, for RPC connection with the Omni Core server
    "rescanTimeout": 900000 // Timeout, in miniseconds, for waiting on Omni Core to finish rescanning the blockchain after importing private key
  },
  // Parameter pertaining to IpfsClient module
  "ipfsClient": {
    "apiHost": "127.0.0.1",
    "apiPort": 5001,
    "apiProtocol": "http"
  },
  // Paramenters pertaining to IpfsServerMonitor module
  "ipfsServerMonitor": {
    "enabled": false,
    "checkInterval": 30  // Time, in seconds, defining the period within which IPFS server shall be checked to make sure it is still alive
  },
  // Parameters pertaining to CCFullNodeClient module
  "ccFullNodeClient": {
    "serverHost": "10.8.0.1", // Colored Coins Full-Node server host name/IP address (access via VPN)
    //"serverHost": "localhost", // Colored Coins Full-Node server host name/IP address
    "localAddress": "", // IP address of local network interface to use to connect with the Colored Coins Full-Node server. If not specified (empty string) the default network interface is used
    "connectionTimeout": 30000  // Timeout, in miliseconds, for connection with the Colored Coins Full-Node server
  },
  // Parameters pertaining to CCFullNodeClient module
  "ccMetadataClient": {
    "serverHost": "10.8.0.1", // Colored Coins Metadata server host name/IP address
    "tcpPort": 8180, // TCP port used to connect with the Colored Coins Metadata server
    "tokenValidityDuration": 15, // Time, in seconds, within which JWT token is considered valid for authentication
    "connectionTimeout": 30000  // Timeout, in miliseconds, for connection with the Colored Coins Full-Node server
  },
  // Parameters pertaining to CCMetadata module
  "ccMetadata": {
    "signingCertificateFilePath": "/Users/claudio/Documents/Híades/Clientes/Blockchain of Things/Projects/Catenis/Development/Test SSL certificate/Test_cert.pem",  // Filesystem path to Blockchain of Things' owned SSL certificate used to signed message for asset verification
    "signingCertificateKeyFilePath": "/Users/claudio/Documents/Híades/Clientes/Blockchain of Things/Projects/Catenis/Development/Test SSL certificate/Test_encrypt_key.pem",  // Path to file containing (password protected) key of SSL certificate used to sign message for asset verification
    "urlContentTimeout": 15000  // Timeout, in miliseconds, fro retrieving content associated with a given URL
  }
}